status:complete 
archived

ui_converter

Motivation:

Every now and then we try to design a GUI project. The problem is there is only one GUI builder with a lot of razzle-dazzle.
Others do not have that. If we try to include Qt in a project, the installation size takes > 80Mb and the start up is always slow.
Maybe it would be better to use Tk or pyFLTK. But they lack an advanced GUI builder. Why not use Qt designer and the respective GUI library.
we need to replace pyuic by something else.


what is it ?

it's a self-contained python script; designed to convert .ui files generated by Qt-designer software to other GUI frameworks. such as - dearpygui, tkinter and pyFLTK
I have started with dearpygui as my conversion target. 
                                                                                                 

The assumption as of now is we are attempting to generate a python file. But it can be extended to any other language with the use of proper Template design.


How to use
change the file path, folder path and template directory to respective values in the script.
(will make that as a pre-loaded config later)
Run the script
copy result.py to any folder and enjoy the time you saved by not manually writing a tk GUI.


Any collaboration is more than welcome.


======================================
target library example- derpygui, tkinter, fltk  etc
======================================
dearpygui:
    Stats:
        library dir size: 3MB 
        RAM : 52MB
        ROM: 19MB -- no change after using complex GUI
    Pros:
        It starts up fast, so no issues i suppose
    Cons:
        Can't Change font or it' size
tkinter 
    Stats:
        library dir size: 4MB 
        RAM : 19MB
        ROM: 22.3 MB -- no change after using complex GUI  
    Pros:
        no install requirement !
        at this point, it has the advantage that it can change fonts ,( w.r.t dpg)
    Cons:
        Can't change the size of Check box.
ptfltk
    Stats:
        library dir size: 4MB 
        RAM : 20MB for exe, 136Mb for IDE
        ROM: 19MB 
    Pros:
        Offers more versatility, more stable, fast startup
    Cons:
        Limited documentation for python and limited active support        
    


